{
    "swagger": "2.0",
    "info": {
        "version": "1.2.1",
        "title": "plentyBase"
    },
    "host": "local.plentybase.de:7331",
    "basePath": "/",
    "tags": [
        {
            "name": "About"
        },
        {
            "name": "Authentication"
        },
        {
            "name": "Files"
        },
        {
            "name": "Directories"
        },
        {
            "name": "Healthcheck"
        },
        {
            "name": "Logs"
        },
        {
            "name": "Print history"
        },
        {
            "name": "Printer config"
        },
        {
            "name": "Printers"
        },
        {
            "name": "System"
        }
    ],
    "schemes": [
        "https",
        "http"
    ],
    "paths": {
        "/about/thirdparty": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "List libraries",
                "description": "Lists the libraries that plentyBase is using.",
                "operationId": "getThirdPartyLibs",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of used libraries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThirdPartyLib"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/about/update": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "Get update information",
                "description": "Gets the latest available plentyBase version and version information.",
                "operationId": "checkForUpdate",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Update information"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/about/version": {
            "get": {
                "tags": [
                    "About"
                ],
                "summary": "Get plentyBase version",
                "description": "Gets the plentyBase version currently installed.",
                "operationId": "getApplicationVersion",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Application version"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/authentication/token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Set access token",
                "description": "Sends an authentication request for the specified access token and returns the access token object that is saved in the plentyBase tool. The access token must be specified.",
                "operationId": "setAccessToken",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accessToken",
                        "in": "formData",
                        "description": "The plentyBase access token",
                        "required": false,
                        "type": "string",
                        "x-example": "test_token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set access token",
                        "schema": {
                            "$ref": "#/definitions/TokenBean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/authentication/check": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check access token",
                "description": "Checks if the plentyBase instance requires an access token for authentication. If an access token is required, the access token is checked for validity.",
                "operationId": "checkAccessToken",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "accessToken",
                        "in": "query",
                        "description": "The plentyBase access token",
                        "required": false,
                        "type": "string",
                        "x-example": "test_token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Valid access token"
                    },
                    "401": {
                        "description": "Access token not accepted"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "422": {
                        "description": "Missing parameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/files/collections": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Save collection document (multi-document)",
                "description": "Creates and saves a collection document (multi-document). Specify one file per parameter to include multiple files in the request. You can then define multiple file content elements in the file content list. The form parameter must match the parameter name of the file added.",
                "operationId": "saveCollectionDocument",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "json",
                        "in": "formData",
                        "description": "Save collection document request as a json object<br><b>targetFileId</b> = An optional ID to assign to the collection file<br><b>fileReferences</b><br><b>fileContentList</b><br><b>formParameter</b> = The form parameter of the file to be added. The form parameter must match the parameter name of the file added.<br><b>encoding</b> = The encoding of the file to be added<br><b>type</b> = The content type of the file to be added<br><b>targetFileReference</b><br><b>directory</b> =  The directory in which to save the collection file to be created<br><b>extension</b> = The extension of the collection file to be created<br><b>name</b> = The name of the collection file to be created",
                        "required": true,
                        "type": "string",
                        "x-example": "{\n  \"targetFileId\": \"merge_1\",\n  \"fileReferences\": [],\n  \"fileContentList\": [\n    {\n      \"formParameter\": \"file1\",\n      \"encoding\": \"base64\",\n      \"type\": \"application/pdf\"\n    },\n    {\n      \"formParameter\": \"file2\",\n      \"encoding\": \"\",\n      \"type\": \"application/pdf\"\n    }\n  ],\n  \"targetFileReference\": {\n    \"directory\": \"/private/var/spool/pdfwriter/jeromeklemm/\",\n    \"extension\": \"pdf\",\n    \"name\": \"mergedfile\"\n  }\n}"
                    },
                    {
                        "name": "file1",
                        "in": "formData",
                        "description": "The file to be included in the collection, e.g. a base64 encoded file as string",
                        "required": false,
                        "type": "string",
                        "x-example": "An base64 encoded pdf file"
                    },
                    {
                        "name": "file2",
                        "in": "formData",
                        "description": "The file to be included in the collection",
                        "required": false,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File save response json object",
                        "schema": {
                            "$ref": "#/definitions/FileReferenceBean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/directories": {
            "get": {
                "tags": [
                    "Directories"
                ],
                "summary": "Get directory content",
                "description": "Gets the content of a directory. You can set multiple filters and specify the depth of the results set.",
                "operationId": "listFilteredDirectoryContent",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "directoryPath",
                        "in": "query",
                        "description": "The path to the directory",
                        "required": false,
                        "type": "string",
                        "x-example": "/path/to/your/directory/"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "Limits the results to a specific file type",
                        "required": false,
                        "type": "string",
                        "x-example": "directory"
                    },
                    {
                        "name": "writable",
                        "in": "query",
                        "description": "Parameter value <b>true</b> limits the results to writable files",
                        "required": false,
                        "type": "boolean",
                        "x-example": true
                    },
                    {
                        "name": "hidden",
                        "in": "query",
                        "description": "Parameter value <b>true</b> limits the results to hidden files. If no filter is set, all files are returned.",
                        "required": false,
                        "type": "boolean",
                        "x-example": "false"
                    },
                    {
                        "name": "depth",
                        "in": "query",
                        "description": "The folder depth of the results set",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the content of a directory",
                        "schema": {
                            "$ref": "#/definitions/DirectoryBean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/files": {
            "get": {
                "tags": [
                    "Files"
                ],
                "summary": "Get a file",
                "description": "Gets a file. The path to the file must be specified.",
                "operationId": "getFileViaFilePath",
                "parameters": [
                    {
                        "name": "filePath",
                        "in": "query",
                        "description": "The path of the path",
                        "required": false,
                        "type": "string",
                        "x-example": "/path/to/your/file.pdf"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested file",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Save files",
                "description": "Save one or more files. ",
                "operationId": "saveFilesMultiPart",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "files",
                        "in": "formData",
                        "description": "The file details as a json object<br><b>id</b> = An optional ID to assign to the file<br><b>reference</b><br><b>extension</b> = The filename extension<br><b>directory</b> = The directory in which to save the file<br><b>name</b> = The name under which to save the file<br><b>content</b><br><b>formParameter</b> = The form parameter of the file. The form parameter must match the parameter name of the file added.<br><b>encoding</b> = The encoding of the file<br><b>type</b> = The content type of the file",
                        "required": true,
                        "type": "string",
                        "x-example": "[\n  {\n    \"id\": \"1\",\n    \"reference\": {\n      \"extension\": \"pdf\",\n      \"directory\": \"/private/var/spool/pdfwriter/jeromeklemm/neue test files/\",\n      \"name\": \"testfile1\"\n    },\n    \"content\": {\n      \"formParameter\": \"file1\",\n      \"encoding\": \"base64\",\n      \"type\": \"application/pdf\"\n    }\n  },\n  {\n    \"id\": \"2\",\n    \"reference\": {\n      \"extension\": \"pdf\",\n      \"directory\": \"/private/var/spool/pdfwriter/jeromeklemm/neue test files/\",\n      \"name\": \"testfile2\"\n    },\n    \"content\": {\n      \"formParameter\": \"file2\",\n      \"encoding\": \"\",\n      \"type\": \"application/pdf\"\n    }\n  }\n]"
                    },
                    {
                        "name": "file1",
                        "in": "formData",
                        "description": "The file to be saved, e.g.a base64 encoded file as string",
                        "required": true,
                        "type": "string",
                        "x-example": "An base64 encoded pdf file"
                    },
                    {
                        "name": "file2",
                        "in": "formData",
                        "description": "The file to be saved",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Save file response json object",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FileBean"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/healthcheck": {
            "get": {
                "tags": [
                    "Healthcheck"
                ],
                "summary": "Check if plentyBase is available",
                "description": "Checks if plentyBase is available.",
                "operationId": "doHealthCheck",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/logs": {
            "post": {
                "tags": [
                    "Logs"
                ],
                "summary": "Create a log entry",
                "description": "Creates an entry in the log.",
                "operationId": "log",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "level",
                        "in": "formData",
                        "description": "The severity level of the log entry (error, warning, info, debug, trace)",
                        "required": false,
                        "type": "string",
                        "x-example": "INFO"
                    },
                    {
                        "name": "tag",
                        "in": "formData",
                        "description": "The tag for grouping log entries",
                        "required": false,
                        "type": "string",
                        "x-example": "TEST"
                    },
                    {
                        "name": "message",
                        "in": "formData",
                        "description": "The log message",
                        "required": false,
                        "type": "string",
                        "x-example": "TEST LOG MESSAGE"
                    },
                    {
                        "name": "exception",
                        "in": "formData",
                        "description": "The exception message",
                        "required": false,
                        "type": "string",
                        "x-example": "TEST LOG EXCEPTION"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No formParameter"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/printers/history": {
            "post": {
                "tags": [
                    "Print history"
                ],
                "summary": "Create print history entry",
                "description": "Creates an entry in the print history.",
                "operationId": "addEntryToPrintHistoryWithCurrentDate",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "name": "printHistoryEntryJson",
                        "in": "formData",
                        "description": "Print history entry as a json object without ID and date<br><b>documentType</b> = The type of the document. The following document types are valid:<br>admin, blog, category, correction_document, credit_note, customer, delivery_note, dunning_letter, ebics_hash, facet, invoice, invoice_external, item, multi_credit_note, multi_invoice, offer, order_confirmation, pickup_delivery, receipt, refund_reversal, reorder, repair_bill, return_note, reversal_document, settlement_report, success_confirmation, ticket, webshop, webshop_customer, z_report, shipping_label, shipping_export_label<br><b>description</b> = The description of the document<br><b>filePath</b> = The path under which the file is stored<br><b>printerConfigId</b> = The ID of the printer configuration used",
                        "required": true,
                        "type": "string",
                        "x-example": "{\n  \"documentType\": \"invoice\",\n  \"description\": \"2\",\n  \"filePath\": \"/Users/jeromeklemm/Library/Caches/eu.plentymarkets.plentybase/Downloads/87edc072-db68-4b8a-a446-2dd682095faa_temp_1.pdf\",\n  \"printerConfigId\": 1\n}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "True if successful",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Print history"
                ],
                "summary": "Delete print history entries",
                "description": "Deletes a list of entries from the print history. The IDs of the entries to be deleted must be specified.",
                "operationId": "deleteEntryList",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A list of print history entry IDs as an array",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int32"
                        },
                        "collectionFormat": "multi",
                        "x-example": "1, 2, 3, 4"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "True if successfully deleted complete list of entries",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "False if one or more entries have not been found"
                    }
                }
            }
        },
        "/printers/history/{id}": {
            "get": {
                "tags": [
                    "Print history"
                ],
                "summary": "Get a print history entry",
                "description": "Gets the specified entry of the print history. Entries are stored in the print history for 14 days. The ID of the entry must be specified.",
                "operationId": "readEntry",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the print history entry",
                        "required": true,
                        "type": "integer",
                        "pattern": "\\d+",
                        "format": "int32",
                        "x-example": "1, 2, 3, 4"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Print history entry",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Entry not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Print history"
                ],
                "summary": "Delete a print history entry",
                "description": "Deletes an entry from the print history. The ID of the entry to be deleted must be specified.",
                "operationId": "deleteEntry",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the print history entry",
                        "required": true,
                        "type": "integer",
                        "pattern": "\\d+",
                        "format": "int32",
                        "x-example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "True if successful",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "404": {
                        "description": "Entry not found"
                    }
                }
            }
        },
        "/printers/history/pages/{page}": {
            "get": {
                "tags": [
                    "Print history"
                ],
                "summary": "Get a print history page",
                "description": "Gets a page of print history entries. Entries are stored in the print history for 14 days. The page number, the number of entries per page and the sorting order must be specified.",
                "operationId": "getPageEntries",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "page",
                        "in": "path",
                        "description": "The page number to be returned",
                        "required": true,
                        "type": "integer",
                        "pattern": "[1-9][0-9]*",
                        "format": "int64",
                        "x-example": 1
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "description": "The number of print history entries per page",
                        "required": true,
                        "type": "integer",
                        "format": "int64",
                        "x-example": 10
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "The order in which the print history entries are to be sorted.<br><b>asc</b> = Entries are sorted in ascending order by date, i.e. the oldest entry is returned first.<br><b>desc</b> = Entries are sorted in descending order by date, i.e. the most recent entry is returned first.",
                        "required": true,
                        "type": "string",
                        "x-example": "asc"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Print history page",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Entries not found"
                    }
                }
            }
        },
        "/printers/history/pages": {
            "get": {
                "tags": [
                    "Print history"
                ],
                "summary": "List print history entries",
                "description": "Lists all entries of the print history. Entries are stored in the print history for 14 days. Entries are returned in descending order, i.e. the most recent entry is returned first.",
                "operationId": "readAllPages",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "All print history entries",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrintHistoryEntryBean"
                            }
                        }
                    },
                    "500": {
                        "description": "Entries not found"
                    }
                }
            }
        },
        "/printers/configs": {
            "get": {
                "tags": [
                    "Printer config"
                ],
                "summary": "List printer configurations",
                "description": "Lists the IDs and names of the available printer configurations.",
                "operationId": "getPrinterConfigShortInfoList",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Printer configuration",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PrinterConfigShortInfoBean"
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Printer config"
                ],
                "summary": "Create a printer configuration",
                "description": "Creates a printer configuration.",
                "operationId": "storePrinterConfigPostRequest",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "config",
                        "in": "formData",
                        "description": "The printer configuration details<br><b>configName</b> = The name of the printer configuration<br><b>printerName</b> = The name of the printer<br><b>paperTray</b> = The paper tray to get the paper from<br><b>paperSize</b> = The paper size<br><b>paperOrientation</b> = The paper orientation<br><b>paperScale</b> = The scaling of the page<br><b>duplexMode</b> = The double sided printing option to be used<br><b>showPrintDialog</b> = Whether or not the printer dialogue should open before printing (true/false)<br><b>paperHeight, paperWidth</b> = Values for paperSize custom only<br><b>marginLeft, marginRight, marginTop, marginBottom</b> = Optional: Distances in mm from page corners<br><b>printerPlugin</b> = The printer plugin to be used<br>The values depend on the specification of the printer.",
                        "required": true,
                        "type": "string",
                        "x-example": "{\n    \"configName\": \"Drucker Client Raum\",\n    \"printerName\": \"Brother HL-2270DW series\",\n    \"paperTray\": \"AutoSelect\",\n    \"paperSize\": \"A4\",\n    \"paperOrientation\": \"portrait\",\n    \"paperScale\": \"fit_to_page\",\n    \"duplexMode\": \"\",\n    \"showPrintDialog\": false,\n    \"paperHeight\": 0,\n    \"paperWidth\": 0,\n    \"marginLeft\": 0,\n    \"marginRight\": 0,\n    \"marginTop\": 0,\n    \"marginBottom\": 0,\n    \"autoRotateAndCenter\": false,\n    \"printerPlugin\": \"Standard\"\n}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully saved the printer configuration",
                        "schema": {
                            "$ref": "#/definitions/PrinterConfigStoredResponse"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/printers/configs/{id}": {
            "get": {
                "tags": [
                    "Printer config"
                ],
                "summary": "Get a printer configuration",
                "description": "Gets a printer configuration. The ID of the printer configuration must be specified.",
                "operationId": "getPrinterConfigById",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the printer configuration",
                        "required": true,
                        "type": "integer",
                        "pattern": "\\d+",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Printer configuration json object",
                        "schema": {
                            "$ref": "#/definitions/PrinterConfigDataBean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Printer config"
                ],
                "summary": "Updates a printer configuration",
                "description": "Updates a printer configuration",
                "operationId": "storePrinterConfig",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the printer configuration to be updated",
                        "required": true,
                        "type": "integer",
                        "pattern": "\\d+",
                        "format": "int32",
                        "x-example": 1
                    },
                    {
                        "name": "config",
                        "in": "formData",
                        "description": "The new printer configuration details.<br><b>configName</b> = The name of the printer configuration<br><b>printerName</b> = The name of the printer<br><b>paperTray</b> = The paper tray to get the paper from<br><b>paperSize</b> = The paper size<br><b>paperOrientation</b> = The paper orientation<br><b>paperScale</b> = The scaling of the page<br><b>duplexMode</b> = The double sided printing option to be used<br><b>showPrintDialog</b> = Whether or not the printer dialogue should open before printing (true/false)<br><b>paperHeight, paperWidth</b> = Values for paperSize custom only<br><b>marginLeft, marginRight, marginTop, marginBottom</b> = Optional: Distances in mm from page corners<br><b>printerPlugin</b> = The printer plugin to be used<br>The values depend on the specification of the printer.",
                        "required": true,
                        "type": "string",
                        "x-example": "{\n    \"configName\": \"Drucker Client Raum\",\n    \"printerName\": \"Brother HL-2270DW series\",\n    \"paperTray\": \"AutoSelect\",\n    \"paperSize\": \"A4\",\n    \"paperOrientation\": \"portrait\",\n    \"paperScale\": \"fit_to_page\",\n    \"duplexMode\": \"\",\n    \"showPrintDialog\": false,\n    \"paperHeight\": 0,\n    \"paperWidth\": 0,\n    \"marginLeft\": 0,\n    \"marginRight\": 0,\n    \"marginTop\": 0,\n    \"marginBottom\": 0,\n    \"autoRotateAndCenter\": false,\n    \"printerPlugin\": \"Standard\"\n}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully stored the printer configuration",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Printer config"
                ],
                "summary": "Delete a printer configuration",
                "description": "Deletes a printer configuration. The ID of the printer configuration must be specified.",
                "operationId": "deletePrinterConfig",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the printer configuration to be deleted",
                        "required": true,
                        "type": "integer",
                        "pattern": "\\d+",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configuration successfully deleted",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "500 if no configuration is found"
                    }
                }
            }
        },
        "/printers/tests/print": {
            "post": {
                "tags": [
                    "Printers"
                ],
                "summary": "Print a test page",
                "description": "Prints a test page with the specified printer configuration. Specify a printer configuration as a JSON object or pass the ID of an existing printer configuration using the configId parameter.",
                "operationId": "printTestPage",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "config",
                        "in": "formData",
                        "description": "A printer configuration as a JSON object<br><b>documentType</b> = The type of the document. The following document types are valid:<br>admin, blog, category, correction_document, credit_note, customer, delivery_note, dunning_letter, ebics_hash, facet, invoice, invoice_external, item, multi_credit_note, multi_invoice, offer, order_confirmation, pickup_delivery, receipt, refund_reversal, reorder, repair_bill, return_note, reversal_document, settlement_report, success_confirmation, ticket, webshop, webshop_customer, z_report, shipping_label, shipping_export_label<br><b>description</b> = The description of the file<br><b>printerConfigId</b> = The ID of the printer configuration to be used for the print job<br><b>copies</b> = The number of copies to be printed<br><b>storeInPrintHistory</b> = Flag that indicates if the document is to be saved in the print history (true/false)<br><b>formParameter</b> = The form parameter of the file. The form parameter must match the parameter name of the file added.<br><b>encoding</b> = The encoding of the file<br><b>type</b> = The content type of the file",
                        "required": false,
                        "type": "string",
                        "x-example": "{\n    \"configName\": \"Drucker Client Raum\",\n    \"printerName\": \"Brother HL-2270DW series\",\n    \"paperTray\": \"AutoSelect\",\n    \"paperSize\": \"A4\",\n    \"paperOrientation\": \"portrait\",\n    \"paperScale\": \"fit_to_page\",\n    \"duplexMode\": \"\",\n    \"showPrintDialog\": false,\n    \"paperHeight\": 0,\n    \"paperWidth\": 0,\n    \"marginLeft\": 0,\n    \"marginRight\": 0,\n    \"marginTop\": 0,\n    \"marginBottom\": 0,\n    \"autoRotateAndCenter\": false,\n    \"printerPlugin\": \"Standard\"\n}"
                    },
                    {
                        "name": "configId",
                        "in": "formData",
                        "description": "The ID of an existing printer configuration",
                        "required": false,
                        "type": "integer",
                        "format": "int32",
                        "x-example": 1
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully printed test page",
                        "schema": {
                            "$ref": "#/definitions/PrintStatus"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/printers/print": {
            "post": {
                "tags": [
                    "Printers"
                ],
                "operationId": "printMultiPart",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "printJobs",
                        "in": "formData",
                        "description": "Files json<br><b>documentType</b> = The type of the document. The following document types are valid:<br>admin, blog, category, correction_document, credit_note, customer, delivery_note, dunning_letter, ebics_hash, facet, invoice, invoice_external, item, multi_credit_note, multi_invoice, offer, order_confirmation, pickup_delivery, receipt, refund_reversal, reorder, repair_bill, return_note, reversal_document, settlement_report, success_confirmation, ticket, webshop, webshop_customer, z_report, shipping_label, shipping_export_label<br><b>description</b> = The description of the file<br><b>printerConfigId</b> = The ID of the printer configuration to be used for the print job<br><b>copies</b> = The number of copies to be printed<br><b>storeInPrintHistory</b> = Flag that indicates if the document is to be saved in the print history (true/false)<br><b>formParameter</b> = The form parameter of the file. The form parameter must match the parameter name of the file added.<br><b>encoding</b> = The encoding of the file<br><b>type</b> = The content type of the file",
                        "required": true,
                        "type": "string",
                        "x-example": "[\n  {\n    \"id\": \"testPrint1\",\n    \"documentType\": \"invoice\",\n    \"description\": \"2\",\n    \"printerConfigId\": 1,\n    \"copies\": 0,\n    \"storeInPrintHistory\": true,\n    \"fileReferences\": [],\n    \"fileContentList\": [\n      {\n        \"formParameter\": \"file1\",\n        \"encoding\": \"base64\",\n        \"type\": \"application/pdf\"\n      },\n      {\n        \"formParameter\": \"file2\",\n        \"encoding\": \"\",\n        \"type\": \"application/pdf\"\n      }\n    ]\n  }\n]"
                    },
                    {
                        "name": "file1",
                        "in": "formData",
                        "description": "The file to be printed, e.g. base64 encoded file as string",
                        "required": true,
                        "type": "string",
                        "x-example": "An base64 encoded pdf file"
                    },
                    {
                        "name": "file2",
                        "in": "formData",
                        "description": "The file to be printed",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/printers": {
            "get": {
                "tags": [
                    "Printers"
                ],
                "summary": "List printer specifications",
                "description": "Lists the specifications of the printers that plentyBase can access.",
                "operationId": "getPrinterList",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "List of saved printers",
                        "schema": {
                            "$ref": "#/definitions/PrinterListResponseData"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/system/macaddress": {
            "get": {
                "tags": [
                    "System"
                ],
                "summary": "Get MAC address",
                "description": "Gets the MAC address of the device that is running plentyBase.",
                "operationId": "getMacAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "MAC address in json",
                        "schema": {
                            "$ref": "#/definitions/MacAddressBean"
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "ThirdPartyLib": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "license": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "UpdateBean": {
            "type": "object",
            "properties": {
                "currentVersion": {
                    "type": "string"
                },
                "availableVersion": {
                    "type": "string"
                },
                "url": {
                    "type": "string",
                    "format": "url"
                },
                "channel": {
                    "type": "string"
                }
            }
        },
        "VersionBean": {
            "type": "object",
            "properties": {
                "version": {
                    "type": "string"
                }
            }
        },
        "TokenBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "token": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer",
                    "format": "int32"
                },
                "ipAddress": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time"
                },
                "accepted": {
                    "type": "boolean"
                }
            }
        },
        "FileReferenceBean": {
            "type": "object",
            "properties": {
                "directory": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                }
            }
        },
        "DirectoryBean": {
            "type": "object",
            "properties": {
                "path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "hidden": {
                    "type": "boolean"
                },
                "readable": {
                    "type": "boolean"
                },
                "writable": {
                    "type": "boolean"
                },
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DirectoryBean"
                    }
                }
            }
        },
        "FileBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "content": {
                    "$ref": "#/definitions/FileContentBean"
                },
                "reference": {
                    "$ref": "#/definitions/FileReferenceBean"
                }
            }
        },
        "FileContentBean": {
            "type": "object",
            "properties": {
                "formParameter": {
                    "type": "string"
                },
                "encoding": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "PrintHistoryEntryBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "documentType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "printerConfigId": {
                    "type": "integer",
                    "format": "int32"
                },
                "date": {
                    "type": "string"
                }
            }
        },
        "PrinterConfigShortInfoBean": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "PrinterConfigStoredResponse": {
            "type": "object",
            "properties": {
                "printerConfigId": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "PrinterConfigDataBean": {
            "type": "object",
            "properties": {
                "configName": {
                    "type": "string"
                },
                "printerName": {
                    "type": "string"
                },
                "paperTray": {
                    "type": "string"
                },
                "paperSize": {
                    "type": "string"
                },
                "paperOrientation": {
                    "type": "string"
                },
                "paperScale": {
                    "type": "string"
                },
                "duplexMode": {
                    "type": "string"
                },
                "showPrintDialog": {
                    "type": "boolean"
                },
                "paperHeight": {
                    "type": "number",
                    "format": "double"
                },
                "paperWidth": {
                    "type": "number",
                    "format": "double"
                },
                "marginLeft": {
                    "type": "number",
                    "format": "double"
                },
                "marginRight": {
                    "type": "number",
                    "format": "double"
                },
                "marginTop": {
                    "type": "number",
                    "format": "double"
                },
                "marginBottom": {
                    "type": "number",
                    "format": "double"
                },
                "autoRotateAndCenter": {
                    "type": "boolean"
                },
                "printerPlugin": {
                    "type": "string"
                }
            }
        },
        "PrintStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "filePath": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "errorMessage": {
                    "type": "string"
                }
            }
        },
        "MultiPrintResponse": {
            "type": "object",
            "properties": {
                "printStatusList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrintStatus"
                    }
                }
            }
        },
        "PrinterBean": {
            "type": "object",
            "properties": {
                "printerName": {
                    "type": "string"
                },
                "paperSizes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "paperTrays": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "duplexModi": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "paperOrientations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "printerPlugins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "PrinterListResponseData": {
            "type": "object",
            "properties": {
                "printers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PrinterBean"
                    }
                }
            }
        },
        "MacAddressBean": {
            "type": "object",
            "properties": {
                "macAddress": {
                    "type": "string"
                }
            }
        }
    }
}